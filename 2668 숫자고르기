### 유향그래프 사이클 판단 ###

graph = [...]
visited = [0] * (n + 1)
finished = [0] * (n + 1)

def dfs(node):
  ## 맨 처음 노드 방문처리 , 그 노드에 이어져 있는 노드를 next 라고 하자###
  visited[node] = 1
  next = graph[node]
  ## 만약 next 노드가 방문 x 이면 그 노드 방문##
  if not visited[next]:
    dfs(next)
   ## next 노드가 방문처리되었는데 finished 가 안되어있으면 사이클##
  elif not finished[next]:
    temp = node
    while True:
      '''마지막 노드에서 next 면 사이클의 첫번째 노드부터 현재 노드까지 순서대로 result에
       들어간다. 즉 사이클이 1 -> 2 -> 3 순서였으면 3번 노드의 next인 1 부터 2 , 3 순서대로
       append 됨'''
      result.append(next)
      if temp == next:
        break
       '''다시 되돌아오면 break'''
      next = grah[next]
  '''마지막 finished 처리'''
  finished[node] = 1
  
 
for i in range(1 , n + 1):
  if not visited[i]:
    dfs(i)
    

  
